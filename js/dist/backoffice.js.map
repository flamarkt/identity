{"version":3,"file":"backoffice.js","mappings":"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","sources":["webpack://@flamarkt/identity/webpack/bootstrap","webpack://@flamarkt/identity/webpack/runtime/compat get default export","webpack://@flamarkt/identity/webpack/runtime/define property getters","webpack://@flamarkt/identity/webpack/runtime/hasOwnProperty shorthand","webpack://@flamarkt/identity/webpack/runtime/make namespace object","webpack://@flamarkt/identity/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['app']\"","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/identity/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['components/UserList']\"","webpack://@flamarkt/identity/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage']\"","webpack://@flamarkt/identity/./src/common/states/IdentityFieldsState.ts","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/app']\"","webpack://@flamarkt/identity/./src/common/utils/identityFields.ts","webpack://@flamarkt/identity/./src/common/compat.ts","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/models/User']\"","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/Model']\"","webpack://@flamarkt/identity/./src/backoffice/index.ts","webpack://@flamarkt/identity/./src/common/addUserAttributes.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['components/UserList'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage'];","import User from 'flarum/common/models/User';\n\nexport default class IdentityFieldsState {\n    firstname: string = '';\n    lastname: string = '';\n    birthday: string = '';\n    addressStreet: string = '';\n    addressNumber: string = '';\n    addressCity: string = '';\n    addressZip: string = '';\n    addressState: string = '';\n    addressCountry: string = '';\n\n    valuesFromUser(user: User) {\n        this.firstname = user.firstname() || '';\n        this.lastname = user.lastname() || '';\n        this.birthday = user.birthday() || '';\n        this.addressStreet = user.addressStreet() || '';\n        this.addressNumber = user.addressNumber() || '';\n        this.addressCity = user.addressCity() || '';\n        this.addressZip = user.addressZip() || '';\n        this.addressState = user.addressState() || '';\n        this.addressCountry = user.addressCountry() || '';\n    }\n\n    data(): any {\n        return {\n            firstname: this.firstname,\n            lastname: this.lastname,\n            birthday: this.birthday,\n            addressStreet: this.addressStreet,\n            addressNumber: this.addressNumber,\n            addressCity: this.addressCity,\n            addressZip: this.addressZip,\n            addressState: this.addressState,\n            addressCountry: this.addressCountry,\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\nimport {Children} from 'mithril';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport IdentityFieldsState from '../states/IdentityFieldsState';\n\nexport interface IdentityFieldsOptions {\n    onchange?: () => void\n    disabled?: boolean\n}\n\nexport default function (items: ItemList<Children>, state: IdentityFieldsState, options: IdentityFieldsOptions = {}): ItemList<Children> {\n    items.add('flamarkt-identity-firstname', m('.Form-group', [\n        m('label', {\n            for: 'settings-firstname',\n        }, app.translator.trans('flamarkt-identity.lib.field.firstname')),\n        m('input.FormControl', {\n            id: 'settings-firstname',\n            type: 'text',\n            value: state.firstname,\n            oninput: (event: Event) => {\n                state.firstname = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-lastname', m('.Form-group', [\n        m('label', {\n            for: 'settings-lastname',\n        }, app.translator.trans('flamarkt-identity.lib.field.lastname')),\n        m('input.FormControl', {\n            id: 'settings-lastname',\n            type: 'text',\n            value: state.lastname,\n            oninput: (event: Event) => {\n                state.lastname = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-birthday', m('.Form-group', [\n        m('label', {\n            for: 'settings-birthday',\n        }, app.translator.trans('flamarkt-identity.lib.field.birthday')),\n        m('input.FormControl', {\n            id: 'settings-birthday',\n            type: 'date',\n            value: state.birthday,\n            oninput: (event: Event) => {\n                state.birthday = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressStreet', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressStreet',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressStreet')),\n        m('input.FormControl', {\n            id: 'settings-addressStreet',\n            type: 'text',\n            value: state.addressStreet,\n            oninput: (event: Event) => {\n                state.addressStreet = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressNumber', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressNumber',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressNumber')),\n        m('input.FormControl', {\n            id: 'settings-addressNumber',\n            type: 'text',\n            value: state.addressNumber,\n            oninput: (event: Event) => {\n                state.addressNumber = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressCity', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressCity',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressCity')),\n        m('input.FormControl', {\n            id: 'settings-addressCity',\n            type: 'text',\n            value: state.addressCity,\n            oninput: (event: Event) => {\n                state.addressCity = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressZip', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressZip',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressZip')),\n        m('input.FormControl', {\n            id: 'settings-addressZip',\n            type: 'text',\n            value: state.addressZip,\n            oninput: (event: Event) => {\n                state.addressZip = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressState', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressState',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressState')),\n        m('input.FormControl', {\n            id: 'settings-addressState',\n            type: 'text',\n            value: state.addressState,\n            oninput: (event: Event) => {\n                state.addressState = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    items.add('flamarkt-identity-addressCountry', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressCountry',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressCountry')),\n        m('input.FormControl', {\n            id: 'settings-addressCountry',\n            type: 'text',\n            value: state.addressCountry,\n            oninput: (event: Event) => {\n                state.addressCountry = (event.target as HTMLInputElement).value;\n                options.onchange?.();\n            },\n            disabled: options.disabled,\n        }),\n    ]));\n\n    return items;\n}\n","import IdentityFieldsState from './states/IdentityFieldsState';\nimport identityFields from './utils/identityFields';\n\nexport const common = {\n    'states/IdentityFieldsState': IdentityFieldsState,\n    'utils/identityFields': identityFields,\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import app from 'flamarkt/backoffice/backoffice/app';\nimport {extend, override} from 'flarum/common/extend';\nimport UserList from 'flamarkt/backoffice/backoffice/components/UserList';\nimport UserShowPage from 'flamarkt/backoffice/backoffice/pages/UserShowPage';\nimport User from 'flarum/common/models/User';\nimport {common} from '../common/compat';\nimport identityFields from '../common/utils/identityFields';\nimport IdentityFieldsState from '../common/states/IdentityFieldsState';\nimport addUserAttributes from '../common/addUserAttributes';\n\nexport {\n    common,\n};\n\napp.initializers.add('flamarkt-identity', () => {\n    addUserAttributes();\n\n    app.extensionData.for('flamarkt-identity')\n        .registerSetting({\n            setting: 'flamarkt-identity.searchable',\n            type: 'switch',\n            label: app.translator.trans('flamarkt-identity.backoffice.settings.searchable'),\n            help: app.translator.trans('flamarkt-identity.backoffice.settings.searchableHelp'),\n        })\n        .registerSetting({\n            setting: 'flamarkt-identity.displayNameFormat',\n            type: 'text',\n            label: app.translator.trans('flamarkt-identity.backoffice.settings.displayNameFormat'),\n            placeholder: '{firstname} {lastname}',\n        });\n\n    extend(UserList.prototype, 'head', function (columns) {\n        columns.add('firstname', m('th', 'First name'));\n        columns.add('lastname', m('th', 'Last name'));\n    });\n\n    extend(UserList.prototype, 'columns', function (columns, user) {\n        columns.add('firstname', m('td', user.firstname()));\n        columns.add('lastname', m('td', user.lastname()));\n    });\n\n    override(UserShowPage.prototype, 'oninit', function (original: any, ...args: any) {\n        this.identity = new IdentityFieldsState();\n\n        // We need to use override because we must initialise this.identity before this.show() is called\n        // But this.show() is called from oninit for new records or records already in the store\n        original(...args);\n    });\n\n    extend(UserShowPage.prototype, 'show', function (returnValue: any, user: User) {\n        this.identity.valuesFromUser(user);\n    });\n\n    extend(UserShowPage.prototype, 'fields', function (fields) {\n        identityFields(fields, this.identity, {\n            onchange: () => {\n                this.dirty = true;\n            },\n            disabled: this.saving,\n        });\n    });\n\n    extend(UserShowPage.prototype, 'data', function (data: any) {\n        const identityData = this.identity.data();\n\n        // Only add keys that were modified, that way \"required\" field that aren't filled won't be validated\n        // So we can edit other parts of the user profile without having to fill every missing field\n        Object.keys(identityData).forEach(key => {\n            if (identityData[key] !== (this.user[key]() || '')) {\n                data[key] = identityData[key];\n            }\n        });\n    });\n});\n","import User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport default function () {\n    User.prototype.firstname = Model.attribute('firstname');\n    User.prototype.lastname = Model.attribute('lastname');\n    User.prototype.birthday = Model.attribute('birthday');\n    User.prototype.addressStreet = Model.attribute('addressStreet');\n    User.prototype.addressNumber = Model.attribute('addressNumber');\n    User.prototype.addressCity = Model.attribute('addressCity');\n    User.prototype.addressZip = Model.attribute('addressZip');\n    User.prototype.addressState = Model.attribute('addressState');\n    User.prototype.addressCountry = Model.attribute('addressCountry');\n    //TODO: phone\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","extensions","core","compat","IdentityFieldsState","firstname","lastname","birthday","addressStreet","addressNumber","addressCity","addressZip","addressState","addressCountry","valuesFromUser","user","this","data","items","state","options","add","m","for","app","id","type","oninput","event","target","onchange","disabled","common","identityFields","User","Model","registerSetting","setting","label","help","placeholder","extend","UserList","columns","override","UserShowPage","original","identity","args","returnValue","fields","dirty","saving","identityData","keys","forEach"],"sourceRoot":""}