{"version":3,"file":"backoffice.js","mappings":"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","sources":["webpack://@flamarkt/identity/webpack/bootstrap","webpack://@flamarkt/identity/webpack/runtime/compat get default export","webpack://@flamarkt/identity/webpack/runtime/define property getters","webpack://@flamarkt/identity/webpack/runtime/hasOwnProperty shorthand","webpack://@flamarkt/identity/webpack/runtime/make namespace object","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/extend']\"","webpack://@flamarkt/identity/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['components/UserList']\"","webpack://@flamarkt/identity/external root \"((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage']\"","webpack://@flamarkt/identity/./src/common/states/IdentityFieldsState.ts","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/models/User']\"","webpack://@flamarkt/identity/external root \"flarum.core.compat['common/Model']\"","webpack://@flamarkt/identity/./src/backoffice/index.ts","webpack://@flamarkt/identity/./src/common/addUserAttributes.ts","webpack://@flamarkt/identity/./src/common/identityFields.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['components/UserList'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['backoffice']||{})['pages/UserShowPage'];","import User from 'flarum/common/models/User';\n\nexport default class IdentityFieldsState {\n    firstname: string = '';\n    lastname: string = '';\n    birthday: string = '';\n    addressStreet: string = '';\n    addressNumber: string = '';\n    addressCity: string = '';\n    addressZip: string = '';\n    addressState: string = '';\n    addressCountry: string = '';\n\n    valuesFromUser(user: User) {\n        this.firstname = user.firstname() || '';\n        this.lastname = user.lastname() || '';\n        this.birthday = user.birthday() || '';\n        this.addressStreet = user.addressStreet() || '';\n        this.addressNumber = user.addressNumber() || '';\n        this.addressCity = user.addressCity() || '';\n        this.addressZip = user.addressZip() || '';\n        this.addressState = user.addressState() || '';\n        this.addressCountry = user.addressCountry() || '';\n    }\n\n    data(): any {\n        return {\n            firstname: this.firstname,\n            lastname: this.lastname,\n            birthday: this.birthday,\n            addressStreet: this.addressStreet,\n            addressNumber: this.addressNumber,\n            addressCity: this.addressCity,\n            addressZip: this.addressZip,\n            addressState: this.addressState,\n            addressCountry: this.addressCountry,\n        };\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/User'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import {extend, override} from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport UserList from 'flamarkt/backoffice/backoffice/components/UserList';\nimport UserShowPage from 'flamarkt/backoffice/backoffice/pages/UserShowPage';\nimport User from 'flarum/common/models/User';\nimport identityFields from '../common/identityFields';\nimport IdentityFieldsState from '../common/states/IdentityFieldsState';\nimport addUserAttributes from '../common/addUserAttributes';\n\napp.initializers.add('flamarkt-identity', () => {\n    addUserAttributes();\n\n    app.extensionData.for('flamarkt-identity')\n        .registerSetting({\n            setting: 'flamarkt-identity.displayNameFormat',\n            type: 'text',\n            label: app.translator.trans('flamarkt-identity.backoffice.settings.displayNameFormat'),\n            placeholder: '{firstname} {lastname}',\n        });\n\n    extend(UserList.prototype, 'head', function (columns: ItemList) {\n        columns.add('firstname', m('th', 'First name'));\n        columns.add('lastname', m('th', 'Last name'));\n    });\n\n    extend(UserList.prototype, 'columns', function (columns: ItemList, user: User) {\n        columns.add('firstname', m('td', user.firstname()));\n        columns.add('lastname', m('td', user.lastname()));\n    });\n\n    override(UserShowPage.prototype, 'oninit', function (this: UserShowPage, original: any, ...args: any) {\n        this.identity = new IdentityFieldsState();\n\n        // We need to use override because we must initialise this.identity before this.show() is called\n        // But this.show() is called from oninit for new records or records already in the store\n        original(...args);\n    });\n\n    extend(UserShowPage.prototype, 'show', function (this: UserShowPage, returnValue: any, user: User) {\n        this.identity.valuesFromUser(user);\n    });\n\n    extend(UserShowPage.prototype, 'fields', function (this: UserShowPage, fields: ItemList) {\n        identityFields(fields, this.identity, () => {\n            this.dirty = true;\n        });\n    });\n\n    extend(UserShowPage.prototype, 'data', function (this: UserShowPage, data: any) {\n        const identityData = this.identity.data();\n\n        // Only add keys that were modified, that way \"required\" field that aren't filled won't be validated\n        // So we can edit other parts of the user profile without having to fill every missing field\n        Object.keys(identityData).forEach(key => {\n            if (identityData[key] !== (this.user[key]() || '')) {\n                data[key] = identityData[key];\n            }\n        });\n    });\n});\n","import User from 'flarum/common/models/User';\nimport Model from 'flarum/common/Model';\n\nexport default function () {\n    User.prototype.firstname = Model.attribute('firstname');\n    User.prototype.lastname = Model.attribute('lastname');\n    User.prototype.birthday = Model.attribute('birthday');\n    User.prototype.addressStreet = Model.attribute('addressStreet');\n    User.prototype.addressNumber = Model.attribute('addressNumber');\n    User.prototype.addressCity = Model.attribute('addressCity');\n    User.prototype.addressZip = Model.attribute('addressZip');\n    User.prototype.addressState = Model.attribute('addressState');\n    User.prototype.addressCountry = Model.attribute('addressCountry');\n    //TODO: phone\n}\n","import {Children} from 'mithril';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport IdentityFieldsState from './states/IdentityFieldsState';\n\nexport default function (items: ItemList<Children>, state: IdentityFieldsState, onchange: () => void): ItemList<Children> {\n    items.add('firstname', m('.Form-group', [\n        m('label', {\n            for: 'settings-firstname',\n        }, app.translator.trans('flamarkt-identity.lib.field.firstname')),\n        m('input.FormControl', {\n            id: 'settings-firstname',\n            type: 'text',\n            value: state.firstname,\n            oninput: (event: Event) => {\n                state.firstname = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('lastname', m('.Form-group', [\n        m('label', {\n            for: 'settings-lastname',\n        }, app.translator.trans('flamarkt-identity.lib.field.lastname')),\n        m('input.FormControl', {\n            id: 'settings-lastname',\n            type: 'text',\n            value: state.lastname,\n            oninput: (event: Event) => {\n                state.lastname = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('birthday', m('.Form-group', [\n        m('label', {\n            for: 'settings-birthday',\n        }, app.translator.trans('flamarkt-identity.lib.field.birthday')),\n        m('input.FormControl', {\n            id: 'settings-birthday',\n            type: 'date',\n            value: state.birthday,\n            oninput: (event: Event) => {\n                state.birthday = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressStreet', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressStreet',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressStreet')),\n        m('input.FormControl', {\n            id: 'settings-addressStreet',\n            type: 'text',\n            value: state.addressStreet,\n            oninput: (event: Event) => {\n                state.addressStreet = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressNumber', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressNumber',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressNumber')),\n        m('input.FormControl', {\n            id: 'settings-addressNumber',\n            type: 'text',\n            value: state.addressNumber,\n            oninput: (event: Event) => {\n                state.addressNumber = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressCity', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressCity',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressCity')),\n        m('input.FormControl', {\n            id: 'settings-addressCity',\n            type: 'text',\n            value: state.addressCity,\n            oninput: (event: Event) => {\n                state.addressCity = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressZip', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressZip',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressZip')),\n        m('input.FormControl', {\n            id: 'settings-addressZip',\n            type: 'text',\n            value: state.addressZip,\n            oninput: (event: Event) => {\n                state.addressZip = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressState', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressState',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressState')),\n        m('input.FormControl', {\n            id: 'settings-addressState',\n            type: 'text',\n            value: state.addressState,\n            oninput: (event: Event) => {\n                state.addressState = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    items.add('addressCountry', m('.Form-group', [\n        m('label', {\n            for: 'settings-addressCountry',\n        }, app.translator.trans('flamarkt-identity.lib.field.addressCountry')),\n        m('input.FormControl', {\n            id: 'settings-addressCountry',\n            type: 'text',\n            value: state.addressCountry,\n            oninput: (event: Event) => {\n                state.addressCountry = (event.target as HTMLInputElement).value;\n                onchange();\n            },\n        }),\n    ]));\n\n    return items;\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","extensions","IdentityFieldsState","firstname","lastname","birthday","addressStreet","addressNumber","addressCity","addressZip","addressState","addressCountry","valuesFromUser","user","this","data","app","initializers","add","User","Model","extensionData","registerSetting","setting","type","label","translator","trans","placeholder","extend","UserList","columns","m","override","UserShowPage","original","identity","args","returnValue","fields","items","state","onchange","dirty","for","id","oninput","event","target","identityData","keys","forEach"],"sourceRoot":""}